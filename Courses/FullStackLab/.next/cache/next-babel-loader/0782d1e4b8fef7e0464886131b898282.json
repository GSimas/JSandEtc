{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo Simas\\\\Documents\\\\GitHub\\\\JSandEtc\\\\Courses\\\\FullStackLab\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"App Aqui\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const today = new Date();\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      checkins.docs.forEach(doc => {\n        console.log(doc.id, doc.data());\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Gustavo Simas/Documents/GitHub/JSandEtc/Courses/FullStackLab/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","checkins","near","center","coordinates","radius","docs","forEach","console","log","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACbJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEM,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACvBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAQA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AAClC,WAAO,IAAP;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFA,CADJ;AAMC,CAnBL;;AAqBI,eAAeD,GAAf;AACA,OAAO,eAAeO,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAA+C;AAClD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;AAEA,QAAMI,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE;;AAEA,MAAIP,OAAJ,EAAY;AACR,UAAMQ,aAAa,GAAG,MAAMnB,EAAE,CAC7BoB,UAD2B,CAChB,SADgB,EAE3BC,GAF2B,CAEvBN,WAFuB,EAG3BK,UAH2B,CAGhB,QAHgB,EAI3BC,GAJ2B,CAIvBV,OAAO,CAACW,IAAR,CAAaC,GAJU,EAK3BC,GAL2B,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AAEA,QAAIrB,WAAW,GAAG,IAAlB;;AACA,QAAGoB,UAAH,EAAc;AACVpB,MAAAA,WAAW,GAAG,KAAd;AACA,YAAMsB,QAAQ,GAAG,MAAM3B,EAAE,CAACoB,UAAH,CAAc,SAAd,EACtBC,GADsB,CAClBN,WADkB,EAEtBK,UAFsB,CAEX,QAFW,EAGtBQ,IAHsB,CAGjB;AACFC,QAAAA,MAAM,EAAEJ,UAAU,CAACK,WADjB;AAEFC,QAAAA,MAAM,EAAE;AAFN,OAHiB,EAOtBP,GAPsB,EAAvB;AASAG,MAAAA,QAAQ,CAACK,IAAT,CAAcC,OAAd,CAAsBZ,GAAG,IAAI;AACzBa,QAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACe,EAAhB,EAAoBf,GAAG,CAACK,IAAJ,EAApB;AACH,OAFD;AAGH;;AAID,WAAO;AACHxB,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEHmB,QAAAA,IAAI,EAAEX,OAAO,CAACW,IAFX;AAGHjB,QAAAA;AAHG;AADJ,KAAP;AAOH;;AAED,SAAO;AACHH,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHmB,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAMH","sourcesContent":["import React, { useEffect } from 'react';\r\nimport auth0 from '../lib/auth0';\r\nimport router from 'next/router';\r\nimport { db } from '../lib/db';\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/');\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status');\r\n        }\r\n    })\r\n    \r\n    if(!props.isAuth || props.forceCreate){\r\n        return null;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n        <h1>App Aqui</h1>\r\n        <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default App;\r\n    export async function getServerSideProps({ req, res }){\r\n        const session = await auth0.getSession(req);\r\n        \r\n        const today = new Date();\r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\r\n        \r\n        if (session){\r\n            const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n            \r\n            const todaysData = todaysCheckin.data();\r\n            \r\n            let forceCreate = true;\r\n            if(todaysData){\r\n                forceCreate = false;\r\n                const checkins = await db.collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n                })\r\n                .get()\r\n                \r\n                checkins.docs.forEach(doc => {\r\n                    console.log(doc.id, doc.data())\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate\r\n                }\r\n            }\r\n        }\r\n        \r\n        return {\r\n            props: {\r\n                isAuth: false,\r\n                user: {}\r\n            }\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}