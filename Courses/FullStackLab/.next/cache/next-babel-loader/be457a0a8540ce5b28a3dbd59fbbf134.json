{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo Simas\\\\Documents\\\\GitHub\\\\JSandEtc\\\\Courses\\\\FullStackLab\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const today = new Date();\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Gustavo Simas/Documents/GitHub/JSandEtc/Courses/FullStackLab/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport auth0 from '../lib/auth0';\r\nimport router from 'next/router';\r\nimport { db } from '../lib/db';\r\nimport { distance } from '../lib/geo';\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/');\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status');\r\n        }\r\n    })\r\n    \r\n    if(!props.isAuth || props.forceCreate){\r\n        return null;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n        <h1>Status próximos a você</h1>\r\n\r\n        <table>\r\n            \r\n            {props.checkins.map(checkin => {\r\n                return (\r\n                    <tr>\r\n                        <td>{checkin.id}</td>\r\n                        <td>{checkin.status}</td>\r\n                        <td>{JSON.stringify(checkin.coords)}</td>\r\n                        <td>{checkin.distance}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            }\r\n\r\n        </table>\r\n\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default App;\r\n\r\n    export async function getServerSideProps({ req, res }){\r\n        const session = await auth0.getSession(req);\r\n        \r\n        const today = new Date();\r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\r\n        \r\n        if (session){\r\n            const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n            \r\n            const todaysData = todaysCheckin.data();\r\n            \r\n            let forceCreate = true;\r\n            if(todaysData){\r\n                forceCreate = false;\r\n                const checkins = await db.collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n                })\r\n                .get()\r\n\r\n                const checkinsList = []\r\n                \r\n                checkins.docs.forEach(doc => {\r\n                    checkinsList.push({\r\n                        id: doc.id,\r\n                        status: doc.data().status,\r\n                        coords: {\r\n                            lat: doc.data().coordinates.latitude,\r\n                            long: doc.data().coordinates.longitude\r\n                        },\r\n                        distance: distance(todaysData.coordinates.latitude,\r\n                            todaysData.coordinates.longitude,\r\n                            doc.data().coordinates.latitude,\r\n                            doc.data().coordinates.longitude)\r\n                    })\r\n                })\r\n\r\n                return {\r\n                    props: {\r\n                        isAuth: true,\r\n                        user: session.user,\r\n                        forceCreate: false,\r\n                        checkins: checkinsList\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate\r\n                }\r\n            }\r\n        }\r\n        \r\n        return {\r\n            props: {\r\n                isAuth: false,\r\n                user: {}\r\n            }\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}